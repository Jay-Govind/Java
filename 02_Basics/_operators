Operators in Java

1. Arithetic Operators
    a) Uniary Operators
        symbols = +, -, ++(pre-increment & post-increment), --(pre-decrement & post-decrement)
        examples :
            eg. +1, -1
                ++1, post-increment
                1++, pre-increment
                --1, post-decrement
                1--, pre-decrement


    b) Binary Operators
        symbols = +, -, *, /, %(modulus)
        examples : 
            eg. 1 + 2 = 3
                1 - 2 = -1
                1 * 2 = 2
                1 / 2 = 0
                1 % 2 = 1


    c) Ternary Operators
        symbols = ?, :
        examples :
            eg. (condition) ? statement1 : statement2



2. Relational Operators
    symbols ==, !=, >, <, >=, <=
    examples :
        eg. 1 == 2
            1 != 2
            1 > 2
            1 < 2
            1 >= 2
            1 <= 2



3. Logical Operators
    symbols = &&, ||, !
    examples :
        eg. 1 > 2 && 2 > 3      --> false
            1 > 2 || 2 > 3      --> true
            !(1 > 2 && 2 > 3)   --> true

            a) truth table of && operator
                true && true --> true
                true && false --> false
                false && true --> false
                false && false --> false

            b) truth table of || operator
                true || true --> true
                true || false --> true
                false || true --> true
                false || false --> false

            c) truth table of ! operator
                !true --> false
                !false --> true



4. Assignment Operators
    symbols = =, +=, -=, *=, /=, %=, <<=, >>=, &=, ^=, |=
    examples :
        eg. 1 = 2
            1 += 2
            1 -= 2
            1 *= 2
            1 /= 2
            1 %= 2

            Bitwise Assignment Operators
            // 1 <<= 2
            // 1 >>= 2
            // 1 &= 2
            // 1 ^= 2
            // 1 |= 2


5. Bitwise Operators
    symbols = &, |, ^, ~, <<, >>
    examples :
        eg. 1 & 2
            1 | 2
            1 ^ 2
            ~1
            1 << 2
            1 >> 2


    // Note : Bitwise operator will be discussed in bit manipulation session.